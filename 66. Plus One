You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. 
The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.
Increment the large integer by one and return the resulting array of digits.

                                            Solution:->
class Solution {
    public int[] plusOne(int[] digits) {
        int n=digits.length;
        List<Integer> ans=new ArrayList<>();
        int carry=1;
        for(int i=n-1;i>=0;i--){
            int x=digits[i]+carry;
            if(x==10){
                ans.add(0);
                carry=1;
            }else{
                ans.add(x);
                carry=0;
            }
        }
        if(carry==1) ans.add(1);
        Collections.reverse(ans);
        int[] res = new int[ans.size()];
        for (int i = 0; i < ans.size(); i++) {
            res[i] = ans.get(i);
        }
        return res;
    }
}
