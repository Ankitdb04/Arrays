class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Set <Integer> set=new HashSet<>();
        Set <Integer> resultset=new HashSet<>();
        for(int num: nums1){
            set.add(num);
        }
        for(int num: nums2){
            if(set.contains(num)){
                resultset.add(num);
            }
        }
        int result[]=new int [resultset.size()];
        int index=0;
        for(int num: resultset){
            result[index++]=num;
        }
        return result;
        
    }
}
import java.util.*;

class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        Arrays.sort(nums1); // O(n log n)
        Arrays.sort(nums2); // O(m log m)

        int i = 0, j = 0;
        Set<Integer> resultSet = new HashSet<>();

        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                i++;
            } else if (nums1[i] > nums2[j]) {
                j++;
            } else { // nums1[i] == nums2[j]
                resultSet.add(nums1[i]);
                i++;
                j++;
            }
        }

        // Convert set to array
        int[] result = new int[resultSet.size()];
        int index = 0;
        for (int num : resultSet) {
            result[index++] = num;
        }

        return result;
    }
}
